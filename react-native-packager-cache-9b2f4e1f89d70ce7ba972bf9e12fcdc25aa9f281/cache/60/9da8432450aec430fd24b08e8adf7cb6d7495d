Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/jose/V\xEDdeos/AppBasto/src/components/login/Login.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _nativeBase = require('native-base');

var _reactNativeRouterFlux = require('react-native-router-flux');

var _login = require('../../assets/imgs/login.jpeg');

var _login2 = _interopRequireDefault(_login);

var _reactNativeVideo = require('react-native-video');

var _reactNativeVideo2 = _interopRequireDefault(_reactNativeVideo);

var _videop = require('../../assets/video/videop.mp4');

var _videop2 = _interopRequireDefault(_videop);

var _Firebase = require('../firebase/Firebase');

var _Firebase2 = _interopRequireDefault(_Firebase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  Login: {
    displayName: 'Login'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/jose/V\xEDdeos/AppBasto/src/components/login/Login.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var Login = _wrapComponent('Login')(function (_Component) {
  _inherits(Login, _Component);

  function Login(props) {
    _classCallCheck(this, Login);

    var _this = _possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props));

    _this.state = {
      email: '',
      contraseña: '',
      error: '',
      credential: '',
      loading: false,
      loadingF: false,
      login: {
        correo: '',
        password: ''
      }
    };

    _this.handleChange = function (field, value) {
      var login = _this.state.login;
      login[field] = value;
      _this.setState({ login: login });
    };

    _this.onLoginSuccess = _this.onLoginSuccess.bind(_this);
    _this.onLoginFailed = _this.onLoginFailed.bind(_this);
    return _this;
  }

  _createClass(Login, [{
    key: 'onButtonPress',
    value: function onButtonPress() {
      var _state$login = this.state.login,
          correo = _state$login.correo,
          password = _state$login.password;

      this.setState({ error: '', loading: true });
      _Firebase.firebaseAuth.signInWithEmailAndPassword(correo, password).then(this.onLoginSuccess).catch(this.onLoginFailed);
    }
  }, {
    key: 'onLoginFailed',
    value: function onLoginFailed() {
      this.setState({ error: 'Autenticación Fallida', loading: false });
      _nativeBase.Toast.show({ text: 'Usuario/contraseña inválidos', position: 'bottom', buttonText: 'OK', type: 'danger' });
    }
  }, {
    key: 'onLoginSuccess',
    value: function onLoginSuccess(r) {
      console.log(r);
      this.setState({ email: '', contraseña: '', error: '', loading: false });
      _reactNativeRouterFlux.Actions.Log();
      _nativeBase.Toast.show({ text: 'Bienvenido', position: 'bottom', duration: 5000, type: 'success' });
    }
  }, {
    key: 'spinnerInicio',
    value: function spinnerInicio() {
      if (this.state.loading) {
        return _react3.default.createElement(
          _nativeBase.Button,
          { rounded: true, block: true, style: styles.buttonSpinner, __source: {
              fileName: _jsxFileName,
              lineNumber: 52
            }
          },
          _react3.default.createElement(_nativeBase.Spinner, { color: 'white', __source: {
              fileName: _jsxFileName,
              lineNumber: 53
            }
          })
        );
      }

      return _react3.default.createElement(
        _nativeBase.Button,
        { block: true, style: styles.button, onPress: this.onButtonPress.bind(this), __source: {
            fileName: _jsxFileName,
            lineNumber: 59
          }
        },
        _react3.default.createElement(
          _reactNative.Text,
          { style: styles.boton, __source: {
              fileName: _jsxFileName,
              lineNumber: 60
            }
          },
          'INICIAR SESI\xD3N'
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.img, __source: {
            fileName: _jsxFileName,
            lineNumber: 73
          }
        },
        _react3.default.createElement(_reactNativeVideo2.default, { source: _videop2.default, rate: 1.0, muted: true, resizeMode: "cover", repeat: true, style: styles.video, __source: {
            fileName: _jsxFileName,
            lineNumber: 75
          }
        }),
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.view4, __source: {
              fileName: _jsxFileName,
              lineNumber: 77
            }
          },
          _react3.default.createElement(_nativeBase.Icon, { name: 'ios-arrow-back', style: styles.icon, onPress: function onPress() {
              return _reactNativeRouterFlux.Actions.pop();
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 78
            }
          })
        ),
        _react3.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 81
            }
          },
          _react3.default.createElement(
            _nativeBase.Item,
            { style: styles.inputRounded, __source: {
                fileName: _jsxFileName,
                lineNumber: 82
              }
            },
            _react3.default.createElement(_nativeBase.Input, {
              name: 'correo',
              placeholder: 'Correo electr\xF3nico',
              keyboardType: 'email-address',
              placeholderTextColor: '#fff',
              returnKeyType: 'next',
              autoCapitalize: 'none',
              style: styles.color,
              value: this.state.correo,
              onChangeText: function onChangeText(value) {
                return _this2.handleChange("correo", value);
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 83
              }
            })
          ),
          _react3.default.createElement(
            _nativeBase.Item,
            { style: styles.inputRounded, __source: {
                fileName: _jsxFileName,
                lineNumber: 95
              }
            },
            _react3.default.createElement(_nativeBase.Input, {
              name: 'password',
              placeholder: 'Contrase\xF1a',
              placeholderTextColor: '#fff',
              secureTextEntry: true,
              style: styles.color,
              value: this.state.password,
              onChangeText: function onChangeText(value) {
                return _this2.handleChange("password", value);
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 96
              }
            })
          ),
          this.spinnerInicio()
        ),
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.view2, __source: {
              fileName: _jsxFileName,
              lineNumber: 110
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            { style: styles.view3, __source: {
                fileName: _jsxFileName,
                lineNumber: 111
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.view, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 112
                }
              },
              _react3.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                    return _reactNativeRouterFlux.Actions.Recover();
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 113
                  }
                },
                _react3.default.createElement(
                  _reactNative.Text,
                  { style: styles.text, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 114
                    }
                  },
                  '\xBFOlvidaste tu Contrase\xF1a?'
                )
              )
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.view, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 117
                }
              },
              _react3.default.createElement(
                _reactNative.TouchableOpacity,
                { onPress: function onPress() {
                    return _reactNativeRouterFlux.Actions.Registro();
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 118
                  }
                },
                _react3.default.createElement(
                  _reactNative.Text,
                  { style: styles.text1, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 119
                    }
                  },
                  'Crear Cuenta'
                )
              )
            )
          )
        )
      );
    }
  }]);

  return Login;
}(_react2.Component));

exports.default = Login;


var styles = _reactNative.StyleSheet.create({
  video: {
    position: 'absolute',
    top: 0,
    left: 0,
    bottom: 0,
    right: 0
  },
  img: {
    justifyContent: 'flex-end',
    flex: 2,
    height: null,
    width: null
  },
  texto: {
    color: 'black',
    alignSelf: 'center',
    fontWeight: 'bold',
    marginTop: 20,
    backgroundColor: 'transparent'
  },
  view: {
    margin: 15
  },
  view2: {
    justifyContent: 'flex-end',
    backgroundColor: 'transparent'
  },
  view3: {
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'column',
    marginBottom: 10
  },
  view4: {
    flex: 1,
    margin: 20
  },
  inputRounded: {
    marginRight: 40,
    marginLeft: 40,
    marginBottom: 10,
    borderColor: 'orange',
    borderWidth: 1.5,
    backgroundColor: 'rgba(0,0,0,.5)'
  },
  boton: {
    color: 'white',
    fontWeight: 'bold'
  },
  text: {
    color: 'white'
  },
  text1: {
    color: 'white',
    fontSize: 18
  },
  adelante: {
    flexDirection: 'row',
    justifyContent: 'center',
    margin: 20
  },
  button: {
    width: '78%',
    alignSelf: 'center',
    backgroundColor: 'orange'
  },
  icon: {
    backgroundColor: 'transparent',
    color: 'orange',
    fontSize: 50
  },
  buttonSpinner: {
    marginRight: 140,
    marginLeft: 140,
    marginBottom: 10,
    backgroundColor: '#4DA49B'
  },
  color: {
    color: 'white'
  }
});